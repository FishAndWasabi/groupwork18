static int nf_tables_getrule(struct net *net, struct sock *nlsk,static void nf_tables_rule_destroy(const struct nft_ctx *ctx,
				   struct nft_rule *rule)
{
	struct nft_expr *expr;
	struct nft_expr *expr, *next;

	/*
	 * Careful: some expressions might not be initialized in case this

static void nf_tables_rule_destroy(const struct nft_ctx *ctx,	 */
	expr = nft_expr_first(rule);
	while (expr != nft_expr_last(rule) && expr->ops) {
		next = nft_expr_next(expr);
		nf_tables_expr_destroy(ctx, expr);
		expr = nft_expr_next(expr);
		expr = next;
	}
	kfree(rule);
}

__nft_match_destroy(const struct nft_ctx *ctx, const struct nft_expr *expr,		    void *info)
{
	struct xt_match *match = expr->ops->data;
	struct module *me = match->me;
	struct xt_mtdtor_param par;

	par.net = ctx->net;

__nft_match_destroy(const struct nft_ctx *ctx, const struct nft_expr *expr,		par.match->destroy(&par);

	if (nft_xt_put(container_of(expr->ops, struct nft_xt, ops)))
		module_put(match->me);
		module_put(me);
}

static void


