FEATURE_TESTS_BASIC :=                  \        sched_getcpu			\
        sdt				\
        setns				\
        libopencsd
        libopencsd			\
        libaio

# FEATURE_TESTS_BASIC + FEATURE_TESTS_EXTRA is the complete list
# of all feature tests

FEATURE_DISPLAY ?=              \         zlib                   \
         lzma                   \
         get_cpuid              \
         bpf
         bpf			\
         libaio

# Set FEATURE_CHECK_(C|LD)FLAGS-all for all FEATURE_TESTS features.
# If in the future we need per-feature checks/flags for features not

FILES=                                          \         test-libopencsd.bin			\
         test-clang.bin				\
         test-llvm.bin				\
         test-llvm-version.bin
         test-llvm-version.bin			\
         test-libaio.bin

FILES := $(addprefix $(OUTPUT),$(FILES))


$(OUTPUT)test-clang.bin:
-include $(OUTPUT)*.d

$(OUTPUT)test-libaio.bin:
	$(BUILD) -lrt

###############################

clean:

# include "test-libopencsd.c"
#undef main

#define main main_test_libaio
# include "test-libaio.c"
#undef main

int main(int argc, char *argv[])
{
	main_test_libpython();

int main(int argc, char *argv[])	main_test_sdt();
	main_test_setns();
	main_test_libopencsd();
	main_test_libaio();

	return 0;
}

// SPDX-License-Identifier: GPL-2.0
#include <aio.h>

int main(void)
{
	struct aiocb aiocb;

	aiocb.aio_fildes  = 0;
	aiocb.aio_offset  = 0;
	aiocb.aio_buf     = 0;
	aiocb.aio_nbytes  = 0;
	aiocb.aio_reqprio = 0;
	aiocb.aio_sigevent.sigev_notify = 1 /*SIGEV_NONE*/;

	return (int)aio_return(&aiocb);
}

ifeq ($(feature-glibc), 1)  CFLAGS += -DHAVE_GLIBC_SUPPORT
endif

ifeq ($(feature-libaio), 1)
  ifndef NO_AIO
    CFLAGS += -DHAVE_AIO_SUPPORT
  endif
endif

ifdef NO_DWARF
  NO_LIBDW_DWARF_UNWIND := 1
endif

include ../scripts/utilities.mak# Define LIBCLANGLLVM if you DO want builtin clang and llvm support.
# When selected, pass LLVM_CONFIG=/path/to/llvm-config to `make' if
# llvm-config is not in $PATH.

#
# Define NO_CORESIGHT if you do not want support for CoreSight trace decoding.
#
# Define NO_AIO if you do not want support of Posix AIO based trace
# streaming for record mode. Currently Posix AIO trace streaming is
# supported only when linking with glibc.
#

# As per kernel Makefile, avoid funny character set dependencies
unexport LC_ALL


