static int __cpuidle poll_idle(struct cpuidle_device *dev,
	local_irq_enable();
	if (!current_set_polling_and_test()) {
		u64 limit = (u64)drv->states[1].target_residency * NSEC_PER_USEC;
		unsigned int loop_count = 0;
		u64 limit = TICK_USEC;
		int i;

		for (i = 1; i < drv->state_count; i++) {
			if (drv->states[i].disabled || dev->states_usage[i].disable)
				continue;

			limit = (u64)drv->states[i].target_residency * NSEC_PER_USEC;
			break;
		}

		while (!need_resched()) {
			cpu_relax();


