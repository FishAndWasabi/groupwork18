struct xt_mtchk_param {	void *matchinfo;
	unsigned int hook_mask;
	u_int8_t family;
	bool nft_compat;
};

/**

struct xt_tgchk_param {	void *targinfo;
	unsigned int hook_mask;
	u_int8_t family;
	bool nft_compat;
};

/* Target destructor parameters */

static int ebt_stp_mt_check(const struct xt_mtchk_param *par)	    !(info->bitmask & EBT_STP_MASK))
		return -EINVAL;
	/* Make sure the match only receives stp frames */
	if (!ether_addr_equal(e->destmac, bridge_ula) ||
	    !ether_addr_equal(e->destmsk, msk) || !(e->bitmask & EBT_DESTMAC))
	if (!par->nft_compat &&
	    (!ether_addr_equal(e->destmac, bridge_ula) ||
	     !ether_addr_equal(e->destmsk, msk) ||
	     !(e->bitmask & EBT_DESTMAC)))
		return -EINVAL;

	return 0;

static int clusterip_tg_check(const struct xt_tgchk_param *par)	struct clusterip_config *config;
	int ret;

	if (par->nft_compat) {
		pr_err("cannot use CLUSTERIP target from nftables compat\n");
		return -EOPNOTSUPP;
	}

	if (cipinfo->hash_mode != CLUSTERIP_HASHMODE_SIP &&
	    cipinfo->hash_mode != CLUSTERIP_HASHMODE_SIP_SPT &&
	    cipinfo->hash_mode != CLUSTERIP_HASHMODE_SIP_SPT_DPT) {

nft_target_set_tgchk_param(struct xt_tgchk_param *par,		par->hook_mask = 0;
	}
	par->family	= ctx->afi->family;
	par->nft_compat = true;
}

static void target_compat_from_user(struct xt_target *t, void *in, void *out)

nft_match_set_mtchk_param(struct xt_mtchk_param *par, const struct nft_ctx *ctx,		par->hook_mask = 0;
	}
	par->family	= ctx->afi->family;
	par->nft_compat = true;
}

static void match_compat_from_user(struct xt_match *m, void *in, void *out)

static int tcpmss_tg4_check(const struct xt_tgchk_param *par)			"FORWARD, OUTPUT and POSTROUTING hooks\n");
		return -EINVAL;
	}
	if (par->nft_compat)
		return 0;

	xt_ematch_foreach(ematch, e)
		if (find_syn_match(ematch))
			return 0;

static int tcpmss_tg6_check(const struct xt_tgchk_param *par)			"FORWARD, OUTPUT and POSTROUTING hooks\n");
		return -EINVAL;
	}
	if (par->nft_compat)
		return 0;

	xt_ematch_foreach(ematch, e)
		if (find_syn_match(ematch))
			return 0;


