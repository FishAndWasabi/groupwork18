struct msm_gpu *a3xx_gpu_init(struct drm_device *dev)	adreno_gpu = &a3xx_gpu->base;
	gpu = &adreno_gpu->base;

	a3xx_gpu->pdev = pdev;

	gpu->perfcntrs = perfcntrs;
	gpu->num_perfcntrs = ARRAY_SIZE(perfcntrs);



struct a3xx_gpu {
	struct adreno_gpu base;
	struct platform_device *pdev;

	/* if OCMEM is used for GMEM: */
	uint32_t ocmem_base;

struct msm_gpu *a4xx_gpu_init(struct drm_device *dev)	adreno_gpu = &a4xx_gpu->base;
	gpu = &adreno_gpu->base;

	a4xx_gpu->pdev = pdev;

	gpu->perfcntrs = NULL;
	gpu->num_perfcntrs = 0;



struct a4xx_gpu {
	struct adreno_gpu base;
	struct platform_device *pdev;

	/* if OCMEM is used for GMEM: */
	uint32_t ocmem_base;

static int a5xx_zap_shader_init(struct msm_gpu *gpu)	static bool loaded;
	struct adreno_gpu *adreno_gpu = to_adreno_gpu(gpu);
	struct a5xx_gpu *a5xx_gpu = to_a5xx_gpu(adreno_gpu);
	struct platform_device *pdev = a5xx_gpu->pdev;
	struct platform_device *pdev = gpu->pdev;
	int ret;

	/*

struct msm_gpu *a5xx_gpu_init(struct drm_device *dev)	adreno_gpu = &a5xx_gpu->base;
	gpu = &adreno_gpu->base;

	a5xx_gpu->pdev = pdev;
	adreno_gpu->registers = a5xx_registers;
	adreno_gpu->reg_offsets = a5xx_register_offsets;



struct a5xx_gpu {
	struct adreno_gpu base;
	struct platform_device *pdev;

	struct drm_gem_object *pm4_bo;
	uint64_t pm4_iova;


